---

- name: Check zsh version
  shell: |
    set -o pipefail
    zsh --version | cut -d ' ' -f2
  args:
    executable: /bin/bash
  register: zsh_register_version
  check_mode: no
  changed_when: false
  tags: configure

- name: Set zsh_version variable
  set_fact:
    zsh_version: "{{ zsh_register_version.stdout }}"

- name: Disable autoupdate if zsh_shared install
  set_fact:
    zsh_update_interval: 0
  when:
    - zsh_shared | bool

- name: Check commands exists
  shell: "command -v {{ item.command }} || which {{ item.command }}"
  with_items: "{{ zsh_antigen_bundles }}"
  failed_when: false
  changed_when: false
  check_mode: no
  when: item.command is defined and (zsh_plugin_manager == 'antigen')
  register: zsh_register_commands_exists

- name: Merge hotkeys lists
  set_fact:
    zsh_hotkeys: "{{ zsh_hotkeys + zsh_hotkeys_extras }}"

- name: Antigen installed version check
  block:
    - name: Check antigen version
      shell: |
        set -o pipefail
        cat {{ zsh_antigen_path }}/antigen/VERSION | tr -d 'v'
      args:
        executable: /bin/bash
      register: zsh_register_antigen_version
      changed_when: false
      failed_when: false
      check_mode: no
      tags: configure

    - name: Set zsh_antigen_installed_version variable
      set_fact:
        zsh_antigen_installed_version: "{{ zsh_register_antigen_version.stdout }}"
  when: zsh_plugin_manager == 'antigen'

- name: Antidote installed version check
  block:
    - name: Check antidote version
      shell: |
        set -o pipefail
        source "{{ zsh_antidote_path }}/antidote.zsh"
        antidote -v | awk '{print $3}'
      args:
        executable: /bin/bash
      register: zsh_register_antidote_version
      changed_when: false
      failed_when: false
      check_mode: no
      tags: configure

    - name: Set zsh_antidote_installed_version variable
      set_fact:
        zsh_antidote_installed_version: "{{ zsh_register_antidote_version.stdout }}"
  when: zsh_plugin_manager == 'antidote'

- name: Write .zshrc config
  template:
    src: "zsh/zshrc.j2"
    dest: "{{ zsh_config }}"
    owner: "{{ zsh_user }}"
    mode: "0644"
    group: "{{ zsh_user_group }}"
    backup: yes
#  when: zsh_antigen_installed_version | length > 0

- name: Set zsh as default shell
  user:
    name: "{{ zsh_user }}"
    shell: /bin/zsh
  become: true
  become_user: "root"
  when: not zsh_shared | bool and (ansible_os_family != 'Darwin')

- name: Check zsh env exists
  stat:
    path: "/etc/zsh/zshenv"
  register: zsh_env_stats

- name: Add skip_global_compinit for disable early compinit call in Ubuntu
  lineinfile:
    regexp: "skip_global_compinit=1"
    line: "skip_global_compinit=1"
    dest: /etc/zsh/zshenv
    state: present
  become: true
  become_user: "root"
  when:
    - ansible_distribution == 'Ubuntu'
    - zsh_env_stats.stat.exists
