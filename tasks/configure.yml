---

- name: Check zsh version
  shell: |
    set -o pipefail
    zsh --version | cut -d ' ' -f2
  args:
    executable: /bin/bash
  register: zsh_register_version
  check_mode: no
  changed_when: false
  tags: configure

- name: Set zsh_version variable
  set_fact:
    zsh_version: "{{ zsh_register_version.stdout }}"

#- name: Merge bundles lists
#  set_fact:
#    zsh_antigen_bundles: "{{ zsh_antigen_bundles }}"

- name: Disable autoupdate if zsh_shared install
  set_fact:
    zsh_update_interval: 0
  when:
    - zsh_shared | bool

- name: Check commands exists
  shell: "command -v {{ item.command }} || which {{ item.command }}"
  with_items: "{{ zsh_antigen_bundles }}"
  failed_when: false
  changed_when: false
  check_mode: no
  when: item.command is defined
  register: zsh_register_commands_exists

- name: Merge hotkeys lists
  set_fact:
    zsh_hotkeys: "{{ zsh_hotkeys + zsh_hotkeys_extras }}"

- name: Check antigen version
  shell: |
    set -o pipefail
    cat {{ zsh_antigen_path }}/antigen/VERSION | tr -d 'v'
  args:
    executable: /bin/bash
  register: zsh_register_antigen_version
  changed_when: false
  failed_when: false
  check_mode: no
  tags: configure

- name: Set zsh_antigen_installed_version variable
  set_fact:
    zsh_antigen_installed_version: "{{ zsh_register_antigen_version.stdout }}"

- name: Write .zshrc config
  template:
    src: "zsh/zshrc.j2"
    dest: "{{ zsh_config }}"
    owner: "{{ zsh_user }}"
    mode: "0644"
    group: "{{ zsh_user_group }}"
    backup: yes
  when: zsh_antigen_installed_version | length > 0

- name: Create powerline-shell config dir
  file:
    path: "{{ zsh_user_dir }}/.config/powerline-shell"
    state: directory
    mode: "0755"
  changed_when: False
  when: powerline_version == "shell"

- name: Write powerline-shell config
  template:
    src: "powerline-shell/powerline-config.j2"
    dest: "{{ zsh_user_dir }}/.config/powerline-shell/config.json"
    owner: "{{ zsh_user }}"
    mode: "0644"
    group: "{{ zsh_user_group }}"
    backup: yes
  changed_when: False
  when: powerline_version == "shell"

- name: Write powerline-shell theme
  template:
    src: "powerline-shell/powerline-theme.j2"
    dest: "{{ zsh_user_dir }}/.config/powerline-shell/powerline-theme.py"
    owner: "{{ zsh_user }}"
    mode: "0644"
    group: "{{ zsh_user_group }}"
    backup: yes
  changed_when: False
  when: powerline_version == "shell"

- name: Apply nanorc fix
  block:
    - name: Html conf comment fix in nanorc
      replace:
        path: "{{ item }}"
        regexp: "(.*comment.*)"
        replace: '#\1'
      changed_when: False
      loop:
        - "{{ zsh_user_dir }}/.nano/html.nanorc"
        - "{{ zsh_user_dir }}/.nano/html.j2.nanorc"

    - name: Etc-hosts conf comment fix in nanorc
      replace:
        path: "{{ zsh_user_dir }}/.nano/etc-hosts.nanorc"
        regexp: "normal"
        replace: "white"
      changed_when: False

  when: ansible_os_family != 'Darwin'

- name: Set zsh as default shell
  user:
    name: "{{ zsh_user }}"
    shell: /bin/zsh
  become: true
  become_user: "root"
  when: not zsh_shared | bool

- name: Check zsh env exists
  stat:
    path: "/etc/zsh/zshenv"
  register: zsh_env_stats

- name: Add skip_global_compinit for disable early compinit call in Ubuntu
  lineinfile:
    regexp: "skip_global_compinit=1"
    line: "skip_global_compinit=1"
    dest: /etc/zsh/zshenv
    state: present
  become: true
  become_user: "root"
  when:
    - ansible_distribution == 'Ubuntu'
    - zsh_env_stats.stat.exists
