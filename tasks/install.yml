---

- name: add yadm repository
  get_url:
    url: "https://download.opensuse.org/repositories/home:TheLocehiliosan:yadm/CentOS_{{ ansible_distribution_major_version }}/home:TheLocehiliosan:yadm.repo"
    dest: /etc/yum.repos.d/yadm.repo
  when: ansible_os_family == 'RedHat'

- name: install required redhat repo
  package:
    name: "{{ item }}"
    state: present
  loop:
  - "https://repo.percona.com/yum/percona-release-latest.noarch.rpm"
  - "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
  - "http://repo.openfusion.net/centos{{ ansible_distribution_major_version }}-x86_64/keychain-2.8.3-2.el{{ ansible_distribution_major_version }}.noarch.rpm"
  when: ansible_os_family == 'RedHat'

- name: set additional package list
  block:
  - name: set ubuntu package list
    set_fact:
      my_packages: "{{ my_packages + ['yadm','mysql-client','ipcalc','dnsutils','aptitude','keychain','nmap'] }}"
    when: ansible_distribution == 'Ubuntu'

  - name: set debian package list
    set_fact:
      my_packages: "{{ my_packages + ['yadm','default-mysql-client','ipcalc','dnsutils','aptitude','keychain','perl-doc','procps','man-db','libnet-ifconfig-wrapper-perl','telnet','mtr'] }}"
    when: ansible_distribution == 'Debian'

  - name: set centos package list
    set_fact:
      my_packages: "{{ my_packages + ['mysql-client','bind-utils','yadm','bash-completion','nmap'] }}"
    when: ansible_distribution == 'RedHat' or ansible_distribution == 'CentOS'

- name: Install additional packages
  action: >
    {{ ansible_pkg_mgr }} name={{ my_packages }} state=present update_cache=yes
    vars:
      packages: "{{ my_packages }}"
  become: yes
  when: my_packages is defined

- name: clone grc v1.11.3
  git:
    repo: https://github.com/garabik/grc.git
    dest: "/tmp/grc"
    version: "v1.11.3"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  register: zsh_register_grc_clone

- name: install grc
  shell: |
    cd /tmp/grc
    ./install.sh
  changed_when: False
  become: yes

- name: install bat A cat(1) clone
  apt:
    deb: "https://github.com/sharkdp/bat/releases/download/v{{ bat_version }}/bat_{{ bat_version }}_amd64.deb"
  become: yes
  when:
    - bat_version is defined
    - ansible_os_family == 'Debian'

- name: install powerline prompt prerequisites
  block:
  - name: install powerline-go
    command: bash -c "/usr/local/go/bin/go get -u github.com/justjanne/powerline-go"
    ignore_errors: yes
    changed_when: false
    when: powerline_version == "go"
  
  - name: Install powerline-shell
    pip:
      name: powerline-shell
      executable: "{{ pip3_command }}"
    when:
    - not ansible_check_mode
    - powerline_version == "shell"

#- name: get zsh user home folder
#  shell: |
#    cat /etc/passwd | grep "{{ zsh_user }}" | cut -d ':' -f6
#  changed_when: False
#  become: yes
#  register: user_home

- name: clone nanorc repo
  git:
    repo: 'https://github.com/scopatz/nanorc.git'
    dest: "{{ zsh_user_dir.stdout }}/.nano"
    version: "master"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  changed_when: False

- name: clone antigen {{ zsh_antigen_version }}
  git:
    repo: https://github.com/zsh-users/antigen.git
    dest: "{{ zsh_antigen_path }}/antigen"
    version: "{{ zsh_antigen_version }}"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  register: zsh_register_antigen_clone

- name: clone iwfmp/mc-solarized-skin
  git:
    repo: https://github.com/iwfmp/mc-solarized-skin.git
    version: master
    dest: "~{{ zsh_user }}/.mc/lib/mc-solarized"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  when: zsh_mc_solarized_skin and not zsh_shared

- name: check fzf installed
  command: which fzf
  changed_when: false
  failed_when: false
  check_mode: no
  register: zsh_register_fzf_command

- name: Download fzf
  unarchive:
    src: "{{ zsh_fzf_url }}"
    dest: /usr/local/bin
    remote_src: yes
    creates: /usr/local/bin/fzf
  become: yes
  when: zsh_register_fzf_command.rc == 1

- name: set directory permissions
  file:
    name: "{{ zsh_antigen_path }}"
    owner: "{{ zsh_user }}"
    group: "{{ zsh_user_group }}"
    recurse: yes
  changed_when: false
