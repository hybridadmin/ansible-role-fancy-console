---

- name: install remi repo
  yum:
    name: "http://rpms.remirepo.net/enterprise/remi-release-{{ ansible_distribution_major_version }}.rpm"
    state: present
  register: result
  when: ansible_os_family == "RedHat"
  
- name: add yadm repository
  shell: yum-config-manager --add-repo=https://copr.fedorainfracloud.org/coprs/thelocehiliosan/yadm/repo/epel-7/thelocehiliosan-yadm-epel-7.repo
  args:
    creates: /etc/yum.repos.d/thelocehiliosan-yadm-epel-7.repo
  when: ansible_os_family == "RedHat"

- name: Install zsh, git, wget
  package:
    name: "{{ item.name }}"
    state: present
  loop:
    - { name: "zsh" }
    - { name: "git" }
    - { name: "wget" }
    - { name: "grc" , when: "{{ ansible_os_family == 'Debian' }}" }
    - { name: "yadm" , when: "{{ ansible_os_family == 'Debian' }}" } 
  # brew don't work from root user on macOS
  when: not (zsh_user == 'root' and ansible_os_family == 'Darwin')
  ignore_errors: yes
  
- name: Install powerline-shell
  pip:
    name: powerline-shell
  when: use_powerline == true
  
- name: Clone nanorc repo
  git:
    repo: 'https://github.com/scopatz/nanorc.git'
    dest: "{{ zsh_user_dir }}/.nano"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  when: use_powerline == true
  
- name: Clone antigen {{ zsh_antigen_version }}
  git:
    repo: https://github.com/zsh-users/antigen.git
    dest: "{{ zsh_antigen_path }}/antigen"
    version: "{{ zsh_antigen_version }}"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  register: zsh_register_antigen_clone

- name: Clone iwfmp/mc-solarized-skin
  git:
    repo: https://github.com/iwfmp/mc-solarized-skin.git
    version: master
    dest: "~{{ zsh_user }}/.mc/lib/mc-solarized"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  when: zsh_mc_solarized_skin and not zsh_shared

- name: Check fzf installed
  command: which fzf
  changed_when: false
  failed_when: false
  check_mode: no
  register: zsh_register_fzf_command

- name: Download fzf
  unarchive:
    src: "{{ zsh_fzf_url }}"
    dest: /usr/local/bin
    remote_src: yes
    creates: /usr/local/bin/fzf
  when: zsh_register_fzf_command.rc == 1

- name: Set directory permissions
  file:
    name: "{{ zsh_antigen_path }}"
    owner: "{{ zsh_user }}"
    group: "{{ zsh_user_group }}"
    recurse: yes
  changed_when: false
