---
- name: Create user directories
  file:
    path: "{{ item }}"
    owner: "{{ zsh_user }}"
    group: "{{ zsh_user_group }}"
    state: directory
    mode: "0755"
  with_items:
    - "{{ zsh_user_home_dir }}/.local/bin"

- name: add antidote package
  set_fact:
    pkg_requirements: "{{ pkg_requirements + ['antidote'] }}"
  when:
    - pkg_requirements is defined and (ansible_os_family == 'Darwin')
    - zsh_plugin_manager == 'antidote'

- name: List required packages
  debug:
    msg: "{{ pkg_requirements }}"

- name: Install packages
  block:
    - name: Install additional packages
      package:
        name: "{{ pkg_requirements }}"
        state: present
      become: true
      become_user: "root"
      when: pkg_requirements is defined and (ansible_os_family != 'Darwin')

    - name: Install brew packages
      community.general.homebrew:
        name: "{{ pkg_requirements }}"
        state: present
      when: pkg_requirements is defined and (ansible_os_family == 'Darwin')

- name: Install latest yadm
  shell: |
    set -o pipefail
    git clone https://github.com/TheLocehiliosan/yadm.git {{ zsh_user_home_dir }}/.yadm-project
    ln -s {{ zsh_user_home_dir }}/.yadm-project/yadm {{ zsh_user_home_dir }}/.local/bin/yadm
    chown -R {{ zsh_user }}:{{ zsh_user_group }} {{ zsh_user_home_dir }}/.yadm-project
  args:
    executable: /bin/bash
    creates: "{{ zsh_user_home_dir }}/.yadm-project"
  changed_when: false
  when: ansible_os_family == 'Debian' and ansible_os_family != 'Darwin'

- name: Install grc
  block:
    - name: Clone garabik/grc
      git:
        repo: https://github.com/garabik/grc.git
        dest: "/tmp/grc"
        version: "master"
        force: yes
      become: true
      become_user: "{{ zsh_user }}"
      register: zsh_register_grc_clone
      changed_when: false

    - name: Install garabik/grc
      shell: |
        set -o pipefail
        cd /tmp/grc
        ./install.sh
      args:
        executable: /bin/bash
      changed_when: False
      become: true
      become_user: "root"

- name: Install prompt engine
  block:
    - name: Get latest justjanne/powerline-go version
      shell: |
        set -o pipefail
        curl --silent "https://api.github.com/repos/justjanne/powerline-go/releases/latest" |  grep '"tag_name":' |sed -E 's/.*"([^"]+)".*/\1/' | sed 's/v//g'
      args:
        executable: /bin/bash
      register: poweline_go_version
      changed_when: false
      when: prompt_theme_engine == 'powerline' and ansible_os_family != 'Darwin'

    - name: Install justjanne/powerline-go {{ poweline_go_version.stdout }}
      shell: |
        set -o pipefail
        {{ go_executable }} install github.com/justjanne/powerline-go@latest
      args:
        executable: /bin/bash
      changed_when: false
      when: prompt_theme_engine == 'powerline'

    - name: Install oh-my-posh
      shell: |
        set -o pipefail
        curl -s https://ohmyposh.dev/install.sh | bash -s -- -d /usr/local/bin
      args:
        executable: /bin/bash
      changed_when: false
      when: prompt_theme_engine == 'omp' and ansible_os_family != 'Darwin'

- name: Install nano syntax highlighting
  git:
    repo: "https://github.com/scopatz/nanorc.git"
    dest: "{{ zsh_user_home_dir }}/.nano"
    version: "master"
    force: yes
  become: true
  become_user: "{{ zsh_user }}"
  changed_when: false

- name: Install zsh plugin manager
  block:
    - name: Clone antigen {{ zsh_antigen_version }}
      git:
        repo: https://github.com/zsh-users/antigen.git
        dest: "{{ zsh_antigen_path }}/antigen"
        version: "{{ zsh_antigen_version }}"
        force: yes
      become: true
      become_user: "{{ zsh_user }}"
      register: zsh_register_antigen_clone
      when: zsh_plugin_manager == 'antigen'

    - name: Set antigen directory permissions
      file:
        name: "{{ zsh_antigen_path }}"
        owner: "{{ zsh_user }}"
        group: "{{ zsh_user_group }}"
        recurse: yes
      changed_when: false
      when: zsh_plugin_manager == 'antigen'

    - name: Clone antidote {{ zsh_antidote_version }}
      git:
        repo: https://github.com/mattmc3/antidote.git
        dest: "{{ zsh_antidote_path }}"
        version: "{{ zsh_antidote_version }}"
        force: yes
      become: true
      become_user: "{{ zsh_user }}"
      register: zsh_register_antidote_clone
      when:
        - ansible_os_family != 'Darwin'
        - zsh_plugin_manager == 'antidote'

- name: Install fzf
  block:
    - name: Check fzf installed
      command: which fzf
      changed_when: false
      failed_when: false
      check_mode: no
      register: zsh_register_fzf_command

    - name: Get latest junegunn/fzf version
      shell: |
        set -o pipefail
        curl --silent "https://api.github.com/repos/junegunn/fzf/releases/latest" |  grep '"tag_name":' |sed -E 's/.*"([^"]+)".*/\1/' | sed 's/v//g'
      args:
        executable: /bin/bash
      register: zsh_fzf_version
      changed_when: false
      when: ansible_os_family != 'Darwin'

    - name: Download junegunn/fzf {{ zsh_fzf_version.stdout }}
      unarchive:
        src: "{{ zsh_fzf_url }}"
        dest: /usr/local/bin
        mode: "0755"
        remote_src: yes
        creates: /usr/local/bin/fzf
      become: true
      become_user: "root"
      when:
        - zsh_register_fzf_command.rc == 1
        - ansible_os_family != 'Darwin'
