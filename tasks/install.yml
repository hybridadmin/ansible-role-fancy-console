---

- name: add yadm repository
  yum_repository:
    name: thelocehiliosan-yadm-epel-7.repo
    description: Copr repo for yadm owned by thelocehiliosan
    baseurl: https://copr-be.cloud.fedoraproject.org/results/thelocehiliosan/yadm/epel-{{ ansible_distribution_major_version }}-$basearch/
    repo_gpgcheck: 0
    skip_if_unavailable: True
    gpgcheck: 1
    enabled: yes
    gpgkey: https://copr-be.cloud.fedoraproject.org/results/thelocehiliosan/yadm/pubkey.gpg
  when: ansible_os_family == 'RedHat'
  
- name: install required redhat repo
  yum:
    name: "{{ item }}"
    state: present
  loop:
  - "https://repo.percona.com/yum/percona-release-latest.noarch.rpm"
  - "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
  - "http://repo.openfusion.net/centos{{ ansible_distribution_major_version }}-x86_64/keychain-2.8.3-2.el{{ ansible_distribution_major_version }}.noarch.rpm"
  when: ansible_os_family == 'RedHat'
  
- name: set additional package list
  block:
  - name: set ubuntu package list
    set_fact:
      my_packages: "{{ my_packages + ['ipcalc','dnsutils','aptitude','knot-dnsutils','speedtest-cli','keychain'] }}"
    when: ansible_os_family == 'Debian'

  - name: set centos package list
    set_fact:
      my_packages: "{{ my_packages + ['bind-utils','yadm'] }}"
    when: ansible_os_family == 'RedHat'
  
- name: Install additional packages
  action: >
    {{ ansible_pkg_mgr }} name={{ my_packages }} state=present update_cache=yes
    vars:
      packages: "{{ my_packages }}"
  when: my_packages != ""

- name: Install grc
  shell: |
    git clone https://github.com/garabik/grc.git /tmp/grc
    cd /tmp/grc
    ./install.sh
  when: 
  - use_powerline == true
  
- name: Install bat A cat(1) clone
  apt:
    deb: "https://github.com/sharkdp/bat/releases/download/v{{ bat_version }}/bat_{{ bat_version }}_amd64.deb"    
  when: 
    - bat_version is defined
    - ansible_os_family == 'Debian'
  
- name: ubuntu python pip pre-requisites
  include_tasks: ubuntu-python.yml
  when: ansible_os_family == 'Debian'
  
- name: redhat python pip pre-requisites
  include_tasks: redhat-python.yml
  when: ansible_os_family == 'RedHat'

- name: Install powerline-shell
  pip:
    name: powerline-shell
    executable: "{{ pip3_command }}"
  when:
  - not ansible_check_mode
  - use_powerline == true
  
- name: Clone nanorc repo
  git:
    repo: 'https://github.com/scopatz/nanorc.git'
    dest: "{{ zsh_user_dir }}/.nano"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  when: use_powerline == true
  
- name: Clone antigen {{ zsh_antigen_version }}
  git:
    repo: https://github.com/zsh-users/antigen.git
    dest: "{{ zsh_antigen_path }}/antigen"
    version: "{{ zsh_antigen_version }}"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  register: zsh_register_antigen_clone

- name: Clone iwfmp/mc-solarized-skin
  git:
    repo: https://github.com/iwfmp/mc-solarized-skin.git
    version: master
    dest: "~{{ zsh_user }}/.mc/lib/mc-solarized"
    force: yes
  become: yes
  become_user: "{{ zsh_user }}"
  when: zsh_mc_solarized_skin and not zsh_shared

- name: Check fzf installed
  command: which fzf
  changed_when: false
  failed_when: false
  check_mode: no
  register: zsh_register_fzf_command

- name: Download fzf
  unarchive:
    src: "{{ zsh_fzf_url }}"
    dest: /usr/local/bin
    remote_src: yes
    creates: /usr/local/bin/fzf
  when: zsh_register_fzf_command.rc == 1

- name: Set directory permissions
  file:
    name: "{{ zsh_antigen_path }}"
    owner: "{{ zsh_user }}"
    group: "{{ zsh_user_group }}"
    recurse: yes
  changed_when: false
